{
  "min_packer_version": "1.5.4",
  "variables": {
    "_build_uuid": "{{ uuid }}",
    "ami_base_name": "ubuntu-development",
    "ami_os_name_tag": "Ubuntu",
    "ami_os_release_tag": "Bionic",
    "ansible_extra_args": "",
    "aws_region": "us-east-1",
    "build_tag": "acarberry/development",
    "build_version": null,
    "dry_run": "true",
    "environment": null,
    "packer_instance_type": "t3.micro",
    "security_group_name": "homelab_default",
    "share_with_aws_accounts": "",
    "source_ami_name": "ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server*",
    "source_ami_owner": "099720109477",
    "ssh_username": "ubuntu"
  },
  "builders": [
    {
      "type": "virtualbox-iso",
      "boot_command": [
        "<esc><wait>",
        "<esc><wait>",
        "<enter><wait>",
        "/install/vmlinuz<wait>",
        " auto<wait>",
        " console-setup/ask_detect=false<wait>",
        " console-setup/layoutcode=us<wait>",
        " console-setup/modelcode=pc105<wait>",
        " debconf/frontend=noninteractive<wait>",
        " debian-installer=en_US<wait>",
        " fb=false<wait>",
        " initrd=/install/initrd.gz<wait>",
        " kbd-chooser/method=us<wait>",
        " keyboard-configuration/layout=USA<wait>",
        " keyboard-configuration/variant=USA<wait>",
        " locale=en_US<wait>",
        " netcfg/get_domain=carberry.io<wait>",
        " netcfg/get_hostname={{ .Name }}<wait>",
        " grub-installer/bootdev=/dev/sda<wait>",
        " noapic<wait>",
        " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg<wait>",
        " -- <wait>",
        "<enter><wait>"
      ],
      "boot_wait": "10s",
      "disk_size": 30720,
      "guest_additions_path": "VBoxGuestAdditions.iso",
      "guest_os_type": "Ubuntu_64",
      "headless": true,
      "http_directory": "http",
      "iso_checksum": "sha256:8c5fc24894394035402f66f3824beb7234b757dd2b5531379cb310cedfdf0996",
      "iso_urls": [
        "http://cdimage.ubuntu.com/releases/18.04/release/ubuntu-18.04.5-server-amd64.iso"
      ],
      "shutdown_command": "echo 'vagrant'|sudo -S shutdown -P now",
      "ssh_password": "password1",
      "ssh_port": 22,
      "ssh_timeout": "10000s",
      "ssh_username": "root",
      "vboxmanage": [
        [
          "modifyvm",
          "{{.Name}}",
          "--memory",
          "1024"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--cpus",
          "1"
        ]
      ],
      "virtualbox_version_file": ".vbox_version",
      "vm_name": "packer-ubuntu"
    },
    {
      "type": "amazon-ebs",
      "ami_name": "{{user `ami_base_name`}}-{{user `build_version`}}",
      "ami_users": "{{user `share_with_aws_accounts`}}",
      "ebs_optimized": true,
      "ena_support": true,
      "instance_type": "{{user `packer_instance_type`}}",
      "profile": "{{user `environment`}}",
      "region": "{{user `aws_region`}}",
      "run_tags": {
        "Automation": "packer",
        "Base_AMI_Name": "{{.SourceAMIName}}",
        "Changed-when": "{{isotime \"2006-01-02T03_04_05\"}}",
        "Environment": "{{user `environment`}}",
        "Name": "packer-build-{{user `ami_base_name`}}-{{user `build_version`}}",
        "Version": "{{user `build_version`}}"
      },
      "run_volume_tags": {
        "Automation": "packer",
        "Base_AMI_Name": "{{.SourceAMIName}}",
        "Changed-when": "{{isotime \"2006-01-02T03_04_05\"}}",
        "Environment": "{{user `environment`}}",
        "Name": "packer-build-{{user `ami_base_name`}}-{{user `build_version`}}",
        "Version": "{{user `build_version`}}"
      },
      "security_group_filter": {
        "filters": {
          "tag:Name": "{{user `security_group_name`}}"
        }
      },
      "shutdown_behavior": "terminate",
      "source_ami_filter": {
        "filters": {
          "name": "{{user `source_ami_name`}}",
          "root-device-type": "ebs",
          "virtualization-type": "hvm"
        },
        "most_recent": true,
        "owners": [
          "{{user `source_ami_owner`}}"
        ]
      },
      "sriov_support": true,
      "ssh_username": "{{user `ssh_username`}}",
      "subnet_filter": {
        "filters": {
          "tag:Extra": "nat-build",
          "tag:VPC": "main_vpc_{{user `environment`}}"
        },
        "most_free": true,
        "random": false
      },
      "tags": {
        "Automation": "packer",
        "Base_AMI_Name": "{{.SourceAMIName}}",
        "Changed-when": "{{isotime \"2006-01-02T03_04_05\"}}",
        "Environment": "{{user `environment`}}",
        "Name": "{{user `ami_base_name`}}-{{user `build_version`}}",
        "OS": "{{user `ami_os_name_tag`}}",
        "Release": "{{ user `ami_os_release_tag` }}",
        "Version": "{{user `build_version`}}"
      }
    }
  ],
  "provisioners": [
    {
      "execute_command": "{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "only": [
        "virtualbox-iso"
      ],
      "script": "scripts/vbox.sh",
      "type": "shell"
    },
    {
      "execute_command": "{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "script": "scripts/alfred.sh",
      "type": "shell"
    },
    {
      "execute_command": "{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "only": [
        "virtualbox-iso"
      ],
      "script": "scripts/vagrant.sh",
      "type": "shell"
    },
    {
      "execute_command": "{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "script": "scripts/setup.sh",
      "type": "shell"
    },
    {
      "execute_command": "{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "script": "scripts/ansible.sh",
      "type": "shell"
    },
    {
      "extra_arguments": "{{user `ansible_extra_args`}}",
      "galaxy_file": "../ansible/requirements.yml",
      "playbook_dir": "../ansible/",
      "playbook_file": "../ansible/development.yml",
      "role_paths": "../ansible/roles",
      "type": "ansible-local"
    },
    {
      "execute_command": "{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "script": "scripts/cleanup.sh",
      "type": "shell"
    },
    {
      "type": "shell-local",
      "command": "bash -c 'if [[ {{user `dry_run`}} == true ]]; then touch ../packer/.packer_success && exit 235; else exit 0; fi'"
    }
  ],
  "post-processors": [
    {
      "only": [
        "virtualbox-iso"
      ],
      "output": "builds/{{.Provider}}-devEnv-{{timestamp}}.box",
      "type": "vagrant"
    },
    {
      "box_tag": "{{user `box_tag`}}",
      "only": [
        "virtualbox-iso"
      ],
      "type": "vagrant-cloud",
      "version": "{{user `version`}}"
    }
  ]
}

